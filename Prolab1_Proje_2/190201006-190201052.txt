package sample;

import Oyuncular.Basketbolcu;
import Oyuncular.Futbolcu;
import javafx.application.Application;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.stage.Stage;

import java.io.FileInputStream;
import java.util.Random;

public class Main extends Application {
    public static Futbolcu[] kullanıcıFutbol = new Futbolcu[4];
    public static Futbolcu[] bilgisayarFutbol = new Futbolcu[4];
    public static Basketbolcu[] kullanıcıbasketbol = new Basketbolcu[4];
    public static Basketbolcu[] bilgisayarBasketbol = new Basketbolcu[4];

    @Override
    public void start(Stage primaryStage) throws Exception{
        Parent root = FXMLLoader.load(getClass().getResource("sample.fxml"));
        primaryStage.setTitle("Sporcu Kart Oyunu");


        Scene scene = new Scene(root,1366,768);

        primaryStage.setScene(scene);



        primaryStage.show();

        Futbolcu[] futbolcular = new Futbolcu[8];
        Basketbolcu[] basketbolcular = new Basketbolcu[8];
        futbolcular[0] = new Futbolcu("Lionel Messi", "Barcelona", 90, 85, 80, false);
        futbolcular[1] = new Futbolcu("Cristiano Ronaldo", "Juventus", 95, 80, 95, false);
        futbolcular[2] = new Futbolcu("Neymar da Silva Santos Júnior", "Paris Saint-Germain", 90, 85, 90, false);
        futbolcular[3] = new Futbolcu("Zlatan Ibrahimovic", "Milan", 95, 90, 85, false);
        futbolcular[4] = new Futbolcu("Hakan Çalhanoğlu", "Milan", 90, 95, 85, false);
        futbolcular[5] = new Futbolcu("Ozan Tufan", "Fenerbahçe", 50, 65, 70, false);
        futbolcular[6] = new Futbolcu("Sergen Yalçın", "Beşiktaş", 75, 70, 80, false);
        futbolcular[7] = new Futbolcu("Sabri Sarıoğlu", "Galatasaray", 65, 35, 30, false);



        basketbolcular[0] = new Basketbolcu("Bogdan Bogdanovic","Sacramento Kings",85,80,75,false);
        basketbolcular[1] = new Basketbolcu("Cedi Osman","Clevelan Cavaliers",85,85,90,false);
        basketbolcular[2] = new Basketbolcu("Stephen Curry","Golden State",95,95,95,false);
        basketbolcular[3] = new Basketbolcu("Kobe Bryant","Lakers",95,90,95,false);
        basketbolcular[4] = new Basketbolcu("Göksenin Köksal","Galatasaray",75,70,75,false);
        basketbolcular[5] = new Basketbolcu("Lebron James","Lakers",90,90,95,false);
        basketbolcular[6] = new Basketbolcu("Melih Mahmutoğlu","Fenerbahçe",85,85,90,false);
        basketbolcular[7] = new Basketbolcu("Şehmus Hazer","Beşiktaş",65,70,65,false);



        Random rand = new Random();
        int[] used = {-1,-1,-1,-1};
        int controlPc =0;

        for (int i = 0; i < 4; i++) {
            int temp = rand.nextInt(8);
            int control = 1;
            for (int j = 0; j < 4; j++) {
                if (used[j] == temp) control = 0;
            }
            if (control == 1){
                kullanıcıFutbol[i] = futbolcular[temp];
                used[i] = temp;
            }
            else i--;
        }



        for (int i = 0; i < 8; i++) {
            int temp=0;
            for (int j = 0; j < 4; j++) {
                if (used[j] == i) temp =1;
            }
            if (temp == 0){
                bilgisayarFutbol[controlPc] = futbolcular[i];
                controlPc++;
            }
        }


        int[] used2 = {-1,-1,-1,-1};
        controlPc =0;

        for (int i = 0; i < 4; i++) {
            int temp = rand.nextInt(8);
            int control = 1;
            for (int j = 0; j < 4; j++) {
                if (used2[j] == temp) control = 0;
            }
            if (control == 1){
                kullanıcıbasketbol[i] = basketbolcular[temp];
                used2[i] = temp;
            }
            else i--;

        }


        for (int i = 0; i < 8; i++) {
            int temp=0;
            for (int j = 0; j < 4; j++) {
                if (used2[j] == i) temp =1;
            }
            if (temp == 0){
                bilgisayarBasketbol[controlPc] = basketbolcular[i];
                controlPc++;
            }

        }


        System.out.println("KULLANICI KARTLARI:");

        for (int i = 0; i < 4; i++) {
            String imgyol= "Images/"+ kullanıcıFutbol[i].getSporcuIsim()+".png";
            String a=""+(i+1);
            String isim = "#userImage"+(a);
            ImageView kart1 = (ImageView) primaryStage.getScene().lookup(isim);
            kart1.setImage(new Image(imgyol));
            System.out.println(kullanıcıFutbol[i].getSporcuIsim());
        }
        for (int i = 0; i < 4; i++) {
            String imgyol= "Images/"+ kullanıcıbasketbol[i].getSporcuIsim()+".png";
            String a=""+(i+5);
            String isim = "#userImage"+(a);
            ImageView kart1 = (ImageView) primaryStage.getScene().lookup(isim);
            kart1.setImage(new Image(imgyol));

            System.out.println(kullanıcıbasketbol[i].getSporcuIsim());
        }
        System.out.println("\n");
        System.out.println("BİLGİSAYAR KARTLARI");
        for (int i = 0; i < 4; i++) {
            String imgyol= "Images/kapalıkart.png";
            String a=""+(i+1);
            String isim = "#compImage"+(a);
            ImageView kart1 = (ImageView) primaryStage.getScene().lookup(isim);
            kart1.setImage(new Image(imgyol));
            System.out.println(bilgisayarFutbol[i].getSporcuIsim());
        }
        for (int i = 0; i < 4; i++) {
            String imgyol= "Images/kapalıbasket.png";
            String a=""+(i+5);
            String isim = "#compImage"+(a);
            ImageView kart1 = (ImageView) primaryStage.getScene().lookup(isim);
            kart1.setImage(new Image(imgyol));
            System.out.println(bilgisayarBasketbol[i].getSporcuIsim());
        }

        System.out.println("\n\n");


    }

    public static void main(String[] args) {
        launch(args);
    }
}



package Oyuncular;



public abstract class Sporcu {
    private String sporcuIsim;
    private String sporcuTakim;


    public Sporcu(String sporcuIsim, String sprocuTakim) {
        this.sporcuIsim = sporcuIsim;
        this.sporcuTakim = sporcuTakim;

    }

    public Sporcu(){

    }


    public void sporcuPuaniGoster(){
        System.out.println(sporcuIsim+sporcuTakim);
    }


    public String getSporcuIsim() {
        return sporcuIsim;
    }

    public void setSporcuIsim(String sporcuIsim) {
        this.sporcuIsim = sporcuIsim;
    }

    public String getSprocuTakim() {
        return sporcuTakim;
    }

    public void setSprocuTakim(String sprocuTakim) {
        this.sporcuTakim = sprocuTakim;
    }
}



package Oyuncular;

public class Basketbolcu extends Sporcu{
    private int ikilik;
    private int ucluk;
    private int serbestAtis;
    private boolean kartKullanildiMi;

    public Basketbolcu(String sporcuIsim, String sprocuTakim, int ikilik, int ucluk, int serbestAtis, boolean kartKullanildiMi) {
        super(sporcuIsim, sprocuTakim);
        this.ikilik = ikilik;
        this.ucluk = ucluk;
        this.serbestAtis = serbestAtis;
        this.kartKullanildiMi = kartKullanildiMi;
    }

    public Basketbolcu(){


    }

    public void kullan(){

        this.kartKullanildiMi = true;
    }

    @Override
    public void sporcuPuaniGoster(){
        System.out.println(getSporcuIsim()+" "+getSprocuTakim()+ "İkilik::"+ikilik+"Üçlük:"+ucluk+"Serbest Atış:"+serbestAtis);
    }

    public int getIkilik() {
        return ikilik;
    }

    public void setIkilik(int ikilik) {
        this.ikilik = ikilik;
    }

    public int getUcluk() {
        return ucluk;
    }

    public void setUcluk(int ucluk) {
        this.ucluk = ucluk;
    }

    public int getSerbestAtis() {
        return serbestAtis;
    }

    public void setSerbestAtis(int serbestAtis) {
        this.serbestAtis = serbestAtis;
    }

    public boolean isKartKullanildiMi() {
        return kartKullanildiMi;
    }

    public void setKartKullanildiMi(boolean kartKullanildiMi) {
        this.kartKullanildiMi = kartKullanildiMi;
    }
}



package Oyuncular;



public class Futbolcu extends Sporcu{
    private int penalti;
    private int serbestAtis;
    private int kaleciKarsiKarsiya;
    private boolean kartKullanildiMi;


    public Futbolcu(String sporcuIsim, String sprocuTakim, int penalti, int serbestAtis, int kaleciKarsiKarsiya, boolean kartKullanildiMi) {
        super(sporcuIsim, sprocuTakim);
        this.penalti = penalti;
        this.serbestAtis = serbestAtis;
        this.kaleciKarsiKarsiya = kaleciKarsiKarsiya;
        this.kartKullanildiMi = kartKullanildiMi;

    }

    public Futbolcu(){

    }

    public void kullan(){
        this.kartKullanildiMi = true;
    }

    @Override
    public void sporcuPuaniGoster(){
        System.out.println(getSporcuIsim()+":"+getSprocuTakim()+" Penaltı:"+penalti+" Serbest Atış:"+serbestAtis+"Kaleci ile karşı karşıya :"+kaleciKarsiKarsiya);
    }

    public int getPenalti() {
        return penalti;
    }

    public void setPenalti(int penalti) {
        this.penalti = penalti;
    }

    public int getSerbestAtis() {
        return serbestAtis;
    }

    public void setSerbestAtis(int serbestAtis) {
        this.serbestAtis = serbestAtis;
    }

    public int getKaleciKarsiKarsiya() {
        return kaleciKarsiKarsiya;
    }

    public void setKaleciKarsiKarsiya(int kaleciKarsiKarsiya) {
        this.kaleciKarsiKarsiya = kaleciKarsiKarsiya;
    }

    public boolean isKartKullanildiMi() {
        return kartKullanildiMi;
    }

    public void setKartKullanildiMi(boolean kartKullanildiMi) {
        this.kartKullanildiMi = kartKullanildiMi;
    }
}



package Oyuncular;

public abstract class Oyuncu {
    private int oyuncuID;
    private String oyuncuIsim;
    private int Skor;
    private Futbolcu[] kartListesi = new Futbolcu[4];
    private Basketbolcu[] kartListesi2 = new Basketbolcu[4];

    public Oyuncu(){


    }

    public Oyuncu(int oyuncuID, String oyuncuIsim, int skor, Futbolcu[] kartListesi, Basketbolcu[] kartListesi2) {
        this.oyuncuID = oyuncuID;
        this.oyuncuIsim = oyuncuIsim;
        Skor = skor;
        this.kartListesi = kartListesi;
        this.kartListesi2 = kartListesi2;
    }

    public int skorGoster (){
        return this.Skor;
    }
    public int kartSayisiFutbol()
    {
        int count = 0;
        for (Futbolcu kart : this.kartListesi)
        {
            if (kart != null && !(kart.isKartKullanildiMi()))
                count++;
        }
        return count;
    }

    public int kartSayisiBasketbol()
    {
        int count = 0;
        for (Basketbolcu kart : this.kartListesi2)
        {
            if (kart != null && !(kart.isKartKullanildiMi()))
                count++;
        }
        return count;
    }
    public boolean kartVarMiFutbol(Futbolcu hedef)
    {
        if (kartSayisiFutbol() == 0)
            return false;

        for (Futbolcu kart : this.kartListesi)
        {
            if (kart == null)
                continue;

            if (kart.getSporcuIsim() == hedef.getSporcuIsim())
            {
                return !kart.isKartKullanildiMi();
            }
        }

        return false;
    }

    public boolean kartVarMiBasketbol(Basketbolcu hedef)
    {
        if (kartSayisiBasketbol() == 0)
            return false;

        for (Basketbolcu kart : this.kartListesi2)
        {
            if (kart == null)
                continue;

            if (kart.getSporcuIsim() == hedef.getSporcuIsim())
            {
                return !kart.isKartKullanildiMi();
            }
        }

        return false;
    }

    public void kartKullanFutbol(Futbolcu hedef)
    {
        if (kartSayisiFutbol() == 0)
            return;
        if (!kartVarMiFutbol(hedef))
            return;
        for (Futbolcu kart : this.kartListesi)
        {
            if (kart.getSporcuIsim() == hedef.getSporcuIsim())
            {
                kart.kullan();

                break;
            }
        }
    }
    public void kartKullanBasketbol(Basketbolcu hedef)
    {
        if (kartSayisiBasketbol() == 0)
            return;
        if (!kartVarMiBasketbol(hedef))
            return;
        for (Basketbolcu kart : this.kartListesi2)
        {
            if (kart.getSporcuIsim() == hedef.getSporcuIsim())
            {

                kart.kullan();

                break;
            }
        }
    }


    public abstract Futbolcu kartSec(Futbolcu kart);
    public abstract Basketbolcu kartsec1(Basketbolcu kart);

    public int getOyuncuID() {
        return oyuncuID;
    }

    public void setOyuncuID(int oyuncuID) {
        this.oyuncuID = oyuncuID;
    }

    public String getOyuncuIsim() {
        return oyuncuIsim;
    }

    public void setOyuncuIsim(String oyuncuIsim) {
        this.oyuncuIsim = oyuncuIsim;
    }

    public int getSkor() {
        return Skor;
    }

    public void setSkor(int skor) {
        Skor = skor;
    }

    public Futbolcu[] getKartListesi() {
        return kartListesi;
    }

    public void setKartListesi(Futbolcu[] kartListesi) {
        this.kartListesi = kartListesi;
    }

    public Basketbolcu[] getKartListesi2() {
        return kartListesi2;
    }

    public void setKartListesi2(Basketbolcu[] kartListesi2) {
        this.kartListesi2 = kartListesi2;
    }
}



package Oyuncular;

public class Kullanıcı extends Oyuncu{


    public Kullanıcı() {
    }

    public Kullanıcı(int oyuncuID, String oyuncuIsim, int skor, Futbolcu[] kartListesi, Basketbolcu[] kartListesi2) {
        super(oyuncuID, oyuncuIsim, skor, kartListesi, kartListesi2);
    }

    @Override
    public Futbolcu kartSec(Futbolcu kart) {
        this.kartKullanFutbol(kart);
        return kart;
    }


    @Override
    public Basketbolcu kartsec1(Basketbolcu kart) {
        this.kartKullanBasketbol(kart);
        return kart;
    }
}


package Oyuncular;

import java.util.Random;

public class Bilgisayar extends Oyuncu{

public Bilgisayar(){

}

    public Bilgisayar(int oyuncuID, String oyuncuIsim, int skor, Futbolcu[] kartListesi, Basketbolcu[] kartListesi2) {
        super(oyuncuID, oyuncuIsim, skor, kartListesi, kartListesi2);

    }


    @Override
    public Futbolcu kartSec(Futbolcu kart) {
        Random rand = new Random();
        int rnd = rand.nextInt(this.kartSayisiFutbol());
        int count = 0;
        for (int i = 0; i < this.getKartListesi().length; i++)
        {
            if (this.getKartListesi()[i] == null || this.getKartListesi()[i].isKartKullanildiMi())
                continue;

            if (count == rnd)
            {
                this.kartKullanFutbol(this.getKartListesi()[i]);
                return this.getKartListesi()[i];
            }
            count++;
        }
        return null;
    }

    @Override
    public Basketbolcu kartsec1(Basketbolcu kart) {
        Random rand = new Random();
        int rnd = rand.nextInt(this.kartSayisiBasketbol());
        int count = 0;
        for (int i = 0; i < this.getKartListesi2().length; i++)
        {
            if (this.getKartListesi2()[i] == null || this.getKartListesi2()[i].isKartKullanildiMi())
                continue;

            if (count == rnd)
            {
                this.kartKullanBasketbol(this.getKartListesi2()[i]);
                return this.getKartListesi2()[i];
            }
            count++;
        }
        return null;
    }




}


package sample;

import Oyuncular.Basketbolcu;
import Oyuncular.Bilgisayar;
import Oyuncular.Futbolcu;
import Oyuncular.Kullanıcı;
import com.sun.security.jgss.GSSUtil;
import javafx.fxml.FXMLLoader;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;

import javafx.fxml.FXML;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Text;
import javafx.stage.Stage;

import java.util.Random;

public class Controller {

    @FXML
    private ImageView userImage1;
    @FXML
    private ImageView userImage2;
    @FXML
    private ImageView userImage3;
    @FXML
    private ImageView userImage4;
    @FXML
    private ImageView userImage5;
    @FXML
    private ImageView userImage6;
    @FXML
    private ImageView userImage7;
    @FXML
    private ImageView userImage8;
    @FXML
    private ImageView compImage1;
    @FXML
    private ImageView compImage2;
    @FXML
    private ImageView compImage3;
    @FXML
    private ImageView compImage4;
    @FXML
    private ImageView compImage5;
    @FXML
    private ImageView compImage6;
    @FXML
    private ImageView compImage7;
    @FXML
    private ImageView compImage8;
    @FXML
    private ImageView pcImage;
    @FXML
    private Text pcSkor;
    @FXML
    private Text userSkor;
    @FXML
    private ImageView kapisanKart;
    @FXML
    private Text winText;

    public Controller() {
    }

    public void initialize() {
        gameState = 0;
    }

    private Futbolcu[] kullanıcıFutbol = Main.kullanıcıFutbol;
    private Futbolcu[] bilgisayarFutbol = Main.bilgisayarFutbol;
    private Basketbolcu[] kullanıcıBasketbol = Main.kullanıcıbasketbol;
    private Basketbolcu[] bilgisayarBasketbol = Main.bilgisayarBasketbol;

    private Bilgisayar bilgisayar = new Bilgisayar(1,"Bilgisayar",0,bilgisayarFutbol,bilgisayarBasketbol);
    private Kullanıcı kullanıcı = new Kullanıcı(2,"Kullanıcı",0,kullanıcıFutbol,kullanıcıBasketbol);

    private int kullanıcıPuan = kullanıcı.getSkor();
    private int bilgisayarPuan = bilgisayar.getSkor();
    private int gameState;


    public void userClicked(MouseEvent mouseEvent) {

        ImageView img = (ImageView) mouseEvent.getSource();

        Random rand = new Random();

        Futbolcu[] kapisanKartlar = new Futbolcu[2];
        Basketbolcu[] kapisanKartlar1 = new Basketbolcu[2];
        int pozisyon = rand.nextInt(3)+1;

        if(bilgisayar.kartSayisiFutbol() == 0) gameState = 1;
        else if (bilgisayar.kartSayisiBasketbol() == 0) gameState = 0;


        if(bilgisayar.kartSayisiFutbol()>0 && gameState == 0){

            String id = img.getId().toString().split("e", 3)[2];
            if(Integer.parseInt(id) >  4) return;
            kapisanKartlar[1] = kullanıcı.kartSec(kullanıcı.getKartListesi()[Integer.parseInt(id)-1]);
            int a = rand.nextInt(4);
            Futbolcu kapisan =bilgisayar.kartSec(bilgisayar.getKartListesi()[a]);
            if(kapisan!=null){
                kapisanKartlar[0] = kapisan;
            }
            else{
                while(kapisan!=null){
                    a = rand.nextInt(4);
                    kapisan =bilgisayar.kartSec(bilgisayar.getKartListesi()[a]);
                }
                kapisanKartlar[0] = kapisan;
            }
            System.out.println(kapisanKartlar[1].getSporcuIsim() + " VS "+ kapisanKartlar[0].getSporcuIsim());
            String imgyol = "Images/"+ kapisanKartlar[0].getSporcuIsim() + ".png";
            String imgyol2 = "Images/" + kapisanKartlar[1].getSporcuIsim() +".png";


            if(pozisyon == 1){
                System.out.println("--Pozisyon -> Penaltı");
                //Seçilen Pozisyyon : Penaltı
                if(kapisanKartlar[0].getPenalti() >  kapisanKartlar[1].getPenalti()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    img.setVisible(false);
                    System.out.println("--Bilgisayar 10 Puan Kazandı\n");
                    bilgisayarPuan += 10;
                    gameState = 1;
                }
                else if (kapisanKartlar[0].getPenalti() < kapisanKartlar[1].getPenalti()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    img.setVisible(false);
                    System.out.println("--Kullanıcı 10 Puan Kazandı\n");
                    kullanıcıPuan += 10;
                    gameState = 1;
                }
                else {
                    System.out.println("Berabere Kalındı Lütfen Sıradaki Basketbol Kartını Seçiniz...\n");
                    kapisanKartlar[0].setKartKullanildiMi(false);
                    kapisanKartlar[1].setKartKullanildiMi(false);
                    gameState = 1;
                    pozisyon = rand.nextInt(3)+1;
                }
            }

            else if (pozisyon == 2){
                System.out.println("--Pozisyon -> Serbest Vuruş");
                //Seçilen Pozisyyon : Serbest Atış
                if(kapisanKartlar[0].getSerbestAtis() >  kapisanKartlar[1].getSerbestAtis()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    img.setVisible(false);
                    System.out.println("--Bilgisayar 10 Puan Kazandı\n");
                    bilgisayarPuan += 10;
                    gameState = 1;
                }
                else if (kapisanKartlar[0].getSerbestAtis() < kapisanKartlar[1].getSerbestAtis()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    img.setVisible(false);
                    System.out.println("--Kullanıcı 10 Puan Kazandı\n");
                    kullanıcıPuan += 10;
                    gameState = 1;
                }
                else {
                    System.out.println("Berabere Kalındı Lütfen Sıradaki Basketbol Kartını Seçiniz...\n");
                    kapisanKartlar[0].setKartKullanildiMi(false);
                    kapisanKartlar[1].setKartKullanildiMi(false);
                    gameState = 1;
                    pozisyon = rand.nextInt(3)+1;
                }
            }
            else{
                System.out.println("--Pozisyon -> Kaleci İle Karşı Karşıya");
                //Seçilen Pozisyyon : kaleci ile karşı karşıya
                if(kapisanKartlar[0].getKaleciKarsiKarsiya() >  kapisanKartlar[1].getKaleciKarsiKarsiya()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    img.setVisible(false);
                    System.out.println("--Bilgisayar 10 Puan Kazandı\n");
                    bilgisayarPuan += 10;
                    gameState = 1;
                }
                else if (kapisanKartlar[0].getKaleciKarsiKarsiya() < kapisanKartlar[1].getKaleciKarsiKarsiya()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    img.setVisible(false);
                    System.out.println("--Kullanıcı 10 Puan Kazandı\n");
                    kullanıcıPuan += 10;
                    gameState = 1;
                }
                else {
                    System.out.println("Berabere Kalındı Lütfen Sıradaki Basketbol Kartını Seçiniz...\n");
                    kapisanKartlar[0].setKartKullanildiMi(false);
                    kapisanKartlar[1].setKartKullanildiMi(false);
                    gameState = 1;
                    pozisyon = rand.nextInt(3)+1;
                }
            }

        }

        //Basketbol Durumu
        else {

            String id = img.getId().toString().split("e", 3)[2];
            if (Integer.parseInt(id) < 5) return;
            kapisanKartlar1[1] = kullanıcı.kartsec1(kullanıcı.getKartListesi2()[Integer.parseInt(id) - 5]);
            int a = rand.nextInt(4);
            Basketbolcu kapisan =bilgisayar.kartsec1(bilgisayar.getKartListesi2()[a]);
            if(kapisan!=null){
                kapisanKartlar1[0] = kapisan;
            }
            else{
                while(kapisan!=null){
                    a = rand.nextInt(4);
                    kapisan =bilgisayar.kartsec1(bilgisayar.getKartListesi2()[a]);
                }
                kapisanKartlar1[0] = kapisan;
            }
            System.out.println(kapisanKartlar1[1].getSporcuIsim() + " VS "+ kapisanKartlar1[0].getSporcuIsim());
            String imgyol = "Images/"+ kapisanKartlar1[0].getSporcuIsim() + ".png";
            String imgyol2 = "Images/" + kapisanKartlar1[1].getSporcuIsim() + ".png";

            if(pozisyon == 1){
                System.out.println("--Pozisyon -> İkilik");
                //Seçilen Pozisyon : İkilik
                if(kapisanKartlar1[0].getIkilik() >  kapisanKartlar1[1].getIkilik()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    System.out.println("--Bilgisayar 10 Puan Kazandı\n");
                    img.setVisible(false);
                    bilgisayarPuan += 10;
                    gameState = 0;
                }
                else if (kapisanKartlar1[0].getIkilik() < kapisanKartlar1[1].getIkilik()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    System.out.println("--Kullanıcı 10 Puan Kazandı\n");
                    img.setVisible(false);
                    kullanıcıPuan += 10;
                    gameState = 0;
                }
                else {
                    System.out.println("Berabere Kalındı Lütfen Sıradaki Futbol Kartını Seçiniz...\n");
                    kapisanKartlar1[0].setKartKullanildiMi(false);
                    kapisanKartlar1[1].setKartKullanildiMi(false);
                    gameState = 0;
                    pozisyon = rand.nextInt(3)+1;
                }

            }
            else if (pozisyon == 2){
                System.out.println("--Pozisyon -> Üçlük");
                //Seçilen Pozisyon : Üçlük
                if(kapisanKartlar1[0].getUcluk() >  kapisanKartlar1[1].getUcluk()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    System.out.println("--Bilgisayar 10 Puan Kazandı\n");
                    img.setVisible(false);
                    bilgisayarPuan += 10;
                    gameState = 0;
                }
                else if (kapisanKartlar1[0].getUcluk() < kapisanKartlar1[1].getUcluk()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    System.out.println("--Kullanıcı 10 Puan Kazandı\n");
                    img.setVisible(false);
                    kullanıcıPuan += 10;
                    gameState = 0;
                }
                else {
                    System.out.println("Berabere Kalındı Lütfen Sıradaki Futbol Kartını Seçiniz...\n");
                    kapisanKartlar1[0].setKartKullanildiMi(false);
                    kapisanKartlar1[1].setKartKullanildiMi(false);
                    gameState = 0;
                    pozisyon = rand.nextInt(3)+1;
                }
            }
            else{
                System.out.println("--Pozisyon -> Serbest Atış");
                //Seçilen Pozisyon: Serbest Atış
                if(kapisanKartlar1[0].getSerbestAtis() >  kapisanKartlar1[1].getSerbestAtis()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    System.out.println("--Bilgisayar 10 Puan Kazandı\n");
                    img.setVisible(false);
                    bilgisayarPuan += 10;
                    gameState = 0;
                }
                else if (kapisanKartlar1[0].getSerbestAtis() < kapisanKartlar1[1].getSerbestAtis()){
                    pcImage.setImage(new Image(imgyol));
                    kapisanKart.setImage(new Image(imgyol2));
                    System.out.println("--Kullanıcı 10 Puan Kazandı\n");
                    img.setVisible(false);
                    kullanıcıPuan += 10;
                    gameState = 0;
                }
                else {
                    System.out.println("Berabere Kalındı Lütfen Sıradaki Futbol Kartını Seçiniz...\n");
                    kapisanKartlar1[0].setKartKullanildiMi(false);
                    kapisanKartlar1[1].setKartKullanildiMi(false);
                    gameState = 0;
                    pozisyon = rand.nextInt(3)+1;
                }

            }

        }


        String userSkorText = "K U L L A N I C I  S K O R\n" + "                 "+kullanıcıPuan;
        String pcSkorText = "P C  S K O R\n" + "           "+bilgisayarPuan;

        pcSkor.setText(pcSkorText);
        userSkor.setText(userSkorText);

        if(bilgisayarPuan + kullanıcıPuan == 80){
            if(bilgisayarPuan > kullanıcıPuan){
                winText.setText("B İ L G İ S A Y A R  K A Z A N D I !");
                System.out.println(bilgisayar.getOyuncuIsim()+" KAZANDI...");
            }
            else if(kullanıcıPuan > bilgisayarPuan){
                winText.setText("K U L L A N I C I  K A Z A N D I !");
                System.out.println(kullanıcı.getOyuncuIsim()+" KAZANDI...");
            }
            else{
                winText.setText("B E R A B E R E  K A L I N D I ! ! !");
                System.out.println("BERABERE KALINDI!Bİ DAHA Kİ SEFERE...");
            }
        }

    }
}



